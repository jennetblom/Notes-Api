# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: jennetblom
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: notesapi
# "service" is the name of this project. This will also be added to your AWS resource names.
service: NotesApi

provider:
  name: aws
  runtime: nodejs20.x
  profile: test-jennet
  region: eu-north-1
  iam: 
    role: ${env:AWS_LAMBDA_ROLE_ARN}


plugins: 
  - serverless-dotenv-plugin


package: 
  individually: true

build: 
  esbuild:
    minify: true

functions:
  signUp:
    handler: functions/signUp/index.handler
    events: 
      - httpApi:
          path: '/api/user/signup'
          method: POST

  login:
    handler: functions/login/index.handler
    events: 
      - httpApi:
          path: '/api/user/login'
          method: POST

  getAllNotes:
    handler: functions/getAllNotes/index.handler
    events: 
      - httpApi:
          path: '/api/notes'
          method: GET

  getNoteById:
    handler: functions/getNoteById/index.handler
    events: 
      - httpApi:
          path: '/api/notes/{id}'
          method: GET        

  postNote:
    handler: functions/postNote/index.handler
    events: 
      - httpApi:
          path: '/api/notes'
          method: POST

  updateNote:
    handler: functions/updateNote/index.handler
    events: 
      - httpApi:
          path: '/api/notes/{id}'
          method: PUT

  deleteNote:
    handler: functions/deleteNote/index.handler
    events: 
      - httpApi:
          path: '/api/notes/{id}'
          method: DELETE

  getDeletedNotes:
    handler: functions/getDeletedNotes/index.handler
    events: 
      - httpApi:
          path: '/api/notes/deleted'
          method: GET        

  restoreNote:
    handler: functions/restoreNote/index.handler
    events: 
      - httpApi:
          path: '/api/notes/{id}/restore'
          method: PUT                                                 

resources:
  Resources:
    notesTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName:  notes-db
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    usersDb:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName:  accounts
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST    

